// НАЧАЛО РАБОТЫ С GIT
// После всей чепухи, типа установки git, регистрации на github и указания имени, эл. почты в терминале, в папке с проектом открываем терминал, и пишем git init.

// Команда git status
// С помощью этой команды можно посмотреть статус репозитория

// Добавление новых файлов в проект git add <file>
// После добавления новых файлов в проект, git не следит за их изменениями, они помечаются как "неотслеживаемые файлы". Чтобы они начали отслеживаться, нужно прописать команду "git add <file>" для каждого нового или изменённого файла. После этого в статусе git-а можем увидеть, какие файлы отслеживаются, а какие нет.

// git commit -m"<description>"
// Следующий шаг - это коммит. Это окончательное добавление файлов в репозиторий, когда git запоминает файл навсегда и следит за всеми его последующими изменениями. Коммит делаем только после команды отслеживания файлов git add <file>. Флаг -m означает message(Описание коммита). После коммита, в статусе можем увидеть, что файл который закоммитили, исчез

// Подключаем удалённый репозиторий github:
// 1) Создаём репозиторий на github
// 2) После создания, заходим в наш проект и пишем команду: git remote add origin <ссылка на удалённый репозиторий>. Она нас подключит к репозиторию github
// 3) Пишем команду: git branch -M <имя ветки> (Что-то делаем с веткой. Что такое -M???)
// 4) Пишем команду: git push -u origin master (Пушим на удалённый репозиторий. Что такое -u???)

// Клонируем репозиторий git clone
// После того, как запушили файлы, мы можем их взять с удалённого репозитория в другом проекте. Создадим новый проект clone и впишем там в терминал команду: git clone <ссылка на репозиторий(взять в github)>. После этого все файлы и папки появятся у нас в локальном проекте

// Получение изменений с удалёнки git pull --rebase
// Для получения новых изменений нужно прописать git pull --rebase. Писать просто git pull не стоит, это может привести к созданию ненужных коммитов. Сейчас запушим наш конспект и попробуем получить его в другом проекте